// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Adrian Grzemski",
            "email": "adrian.grzemski@gmail.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Returns the current health status of the service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "general"
                ],
                "summary": "Get service health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HealthResponse"
                        }
                    }
                }
            }
        },
        "/scale": {
            "post": {
                "description": "Scales an enlistment based on the provided scale factor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scaler"
                ],
                "summary": "Scale an enlistment",
                "parameters": [
                    {
                        "description": "Enlistment scale request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EnlistmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EnlistmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/units": {
            "get": {
                "description": "Returns all available units in the registry",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Get all units",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "description": "A list of unit groups",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/units/{name}": {
            "get": {
                "description": "Returns a specific unit group by its name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Get unit by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit group name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "description": "A list of units representing a group",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UnitJSON"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Returns the current version of the service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "general"
                ],
                "summary": "Get service version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VersionResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.EnlistmentRequest": {
            "description": "Request parameters for scaling an enlistment",
            "type": "object",
            "properties": {
                "enlistment": {
                    "type": "string",
                    "example": "Item 1: 1 year\nItem2: 1 month"
                },
                "scale": {
                    "type": "string",
                    "example": "1 minute"
                }
            }
        },
        "models.EnlistmentResponse": {
            "description": "Response containing scaled enlistment values",
            "type": "object",
            "properties": {
                "scaled": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"Item 1: 1 minute\"",
                        "\"Item 2: 5 seconds\"]"
                    ]
                }
            }
        },
        "models.HealthResponse": {
            "description": "Service health information",
            "type": "object",
            "properties": {
                "ready": {
                    "type": "boolean"
                },
                "starttime": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "uptime": {
                    "type": "number"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.UnitJSON": {
            "description": "A unit with value and available aliases",
            "type": "object",
            "properties": {
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "models.VersionResponse": {
            "description": "Service version information",
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "RefScaler",
	Description:      "This is a service for refscaler app",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
